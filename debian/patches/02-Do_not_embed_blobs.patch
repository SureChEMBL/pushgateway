--- a/handler/status.go
+++ b/handler/status.go
@@ -45,7 +45,7 @@
 // Status serves the status page.
 func Status(
 	ms storage.MetricStore,
-	assetFunc func(string) ([]byte, error),
+	tpl string,
 	flags map[string]string,
 ) func(http.ResponseWriter, *http.Request) {
 	birth := time.Now()
@@ -56,12 +56,7 @@
 				return strconv.FormatFloat(f, 'f', -1, 64)
 			},
 		})
-		tpl, err := assetFunc("template.html")
-		if err != nil {
-			http.Error(w, err.Error(), http.StatusInternalServerError)
-			return
-		}
-		_, err = t.Parse(string(tpl))
+                _, err := t.Parse(tpl)
 		if err != nil {
 			http.Error(w, err.Error(), http.StatusInternalServerError)
 			return
--- a/main.go
+++ b/main.go
@@ -16,6 +16,7 @@
 import (
 	"flag"
 	"fmt"
+        "io/ioutil"
 	"net"
 	"net/http"
 	"net/http/pprof"
@@ -24,7 +25,6 @@
 	"syscall"
 	"time"
 
-	"github.com/elazarl/go-bindata-assetfs"
 	"github.com/julienschmidt/httprouter"
 	"github.com/prometheus/client_golang/prometheus"
 	"github.com/prometheus/common/log"
@@ -38,6 +38,7 @@
 	showVersion         = flag.Bool("version", false, "Print version information.")
 	listenAddress       = flag.String("web.listen-address", ":9091", "Address to listen on for the web interface, API, and telemetry.")
 	metricsPath         = flag.String("web.telemetry-path", "/metrics", "Path under which to expose metrics.")
+	localAssets         = flag.String("web.local-assets", "/usr/share/prometheus/pushgateway", "Path to static assets/templates directory.")
 	persistenceFile     = flag.String("persistence.file", "", "File to persist metrics. If empty, metrics are only kept in memory.")
 	persistenceInterval = flag.Duration("persistence.interval", 5*time.Minute, "The minimum interval at which to write out the persistence file.")
 )
@@ -89,10 +90,14 @@
 	r.Handler("GET", "/static/*filepath", prometheus.InstrumentHandler(
 		"static",
 		http.FileServer(
-			&assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo},
+			http.Dir(*localAssets),
 		),
 	))
-	statusHandler := prometheus.InstrumentHandlerFunc("status", handler.Status(ms, Asset, flags))
+	template, err := ioutil.ReadFile(*localAssets+"/template.html")
+	if err != nil {
+		log.Fatal(err)
+	}
+	statusHandler := prometheus.InstrumentHandlerFunc("status", handler.Status(ms, string(template), flags))
 	r.Handler("GET", "/status", statusHandler)
 	r.Handler("GET", "/", statusHandler)
 
--- a/resources/template.html
+++ b/resources/template.html
@@ -19,10 +19,10 @@
     <meta name="viewport" content="width=device-width, initial-scale=1">
     <title>Prometheus Pushgateway</title>
 
-    <script src="/static/jquery-2.1.4.min.js"></script>
-    <link rel="stylesheet" href="/static/bootstrap-3.3.4-dist/css/bootstrap.min.css">
-    <link rel="stylesheet" href="/static/bootstrap-3.3.4-dist/css/bootstrap-theme.min.css">
-    <script src="/static/bootstrap-3.3.4-dist/js/bootstrap.min.js"></script>
+    <script src="/static/jquery/jquery.min.js"></script>
+    <link rel="stylesheet" href="/static/bootstrap/css/bootstrap.min.css">
+    <link rel="stylesheet" href="/static/bootstrap/css/bootstrap-theme.min.css">
+    <script src="/static/bootstrap/js/bootstrap.min.js"></script>
     <script src="/static/functions.js"></script>
 
     <style type="text/css">
